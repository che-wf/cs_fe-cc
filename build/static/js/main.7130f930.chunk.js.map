{"version":3,"sources":["reportWebVitals.js","backend/api/restaurants.js","backend/api/constants.js","backend/hooks/useSort.js","backend/hooks/useRestaurants.js","backend/hooks/useFilters.js","backend/hooks/useSearch.js","components/common/Table/Cell/index.js","components/common/Table/Table.js","components/RestaurantTable/index.js","components/SearchBar/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getRestaurants","headers","myHeaders","Headers","append","getHeaders","fetch","method","redirect","response","json","data","SORT_ASC","useSort","useState","key","order","sort","setSort","sortByKey","array","a","b","x","y","useRestaurants","fetchedRestaurants","restaurants","setRestaurants","useLayoutEffect","results","fetchRestaurants","useFetchRestaurants","useEffect","deriveRestaurants","console","info","useRefreshRestaurants","isFiltering","setIsFiltering","useIsFiltering","search","setSearch","useSearch","Cell","children","onClick","cellKey","className","Table","columns","header","refresh","HeaderRow","useMemo","map","column","index","HeaderCell","useMakeHeader","tableContents","datum","render","value","id","slug","Boolean","length","colSpan","useMakeTableContents","title","RestaurantTable","makePhoneNumberColumn","genres","split","join","number","href","cleanPhoneNumber","replace","SearchBar","type","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"uUAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCLP,SAASQ,IACd,IAAMC,ECHD,WACL,IAAIC,EAAY,IAAIC,QAEpB,OADAD,EAAUE,OAAO,gBAAiB,wBAC3BF,EDASG,GAQhB,OAAOC,MANU,6BACM,CACrBC,OAAQ,MACRN,QAASA,EACTO,SAAU,WAGTd,MAAK,SAACe,GAAD,OAAcA,EAASC,UAC5BhB,MAAK,SAACiB,GAAD,OAAUA,KEXb,IAAMC,GAAW,EAEjB,SAASC,IAAW,IAAD,EACAC,mBAAS,CAAEC,IAAK,OAAQC,MAAOJ,IAD/B,mBAGxB,MAAO,CAAEK,KAHe,KAGTC,QAHS,MAMnB,SAASC,EAAUC,EAAOH,GAC/B,OAAOG,EAAMH,MAAK,SAAUI,EAAGC,GAC7B,IAAMC,EAAIF,EAAEJ,EAAKF,KACXS,EAAIF,EAAEL,EAAKF,KACjB,OAAIE,EAAKD,QAAUJ,EACVW,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,EAE3BD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,KCK7B,SAASC,IACd,IAAMC,EAfD,WAAgC,IAAD,EACEZ,mBAAS,IADX,mBAC7Ba,EAD6B,KAChBC,EADgB,KAWpC,OARAC,2BAAgB,WAAM,4CACpB,4BAAAR,EAAA,sEACwBrB,IADxB,OACQ8B,EADR,OAEEF,EAAeE,GAFjB,4CADoB,uBAAC,WAAD,wBAKpBC,KACC,IAEIJ,EAIoBK,GADI,EAEOlB,mBAAS,IAFhB,mBAExBa,EAFwB,KAEXC,EAFW,KAGvBX,EAASJ,IAATI,KAOR,OALAgB,qBAAU,WACRL,EAmBJ,WAAoD,IAAzBD,EAAwB,uDAAV,GAAIV,EAAM,uCACjD,OAAOE,EAAUQ,EAAaV,GApBbiB,CAAkBR,EAAoBT,MACpD,CAACS,EAAoBT,IAExBkB,QAAQC,KAAKT,GACN,CAAEA,cAAaC,kBAGjB,SAASS,IAAyB,IAAD,EACEZ,IAAhCE,EAD8B,EAC9BA,YAAaC,EADiB,EACjBA,eAEbX,EAASJ,IAATI,MC/BH,WAA2B,IAAD,EACOH,qBADP,mBACxBwB,EADwB,KACXC,EADW,KAE/B,MAAO,CAAED,cAAaC,mBD8BEC,GAAhBF,YErCH,WAAsB,IAAD,EACExB,qBADF,mBAE1B,MAAO,CAAE2B,OAFiB,KAETC,UAFS,MFsCPC,GAAXF,OAERR,qBAAU,WACRL,EAAeD,EAAaV,M,MGzCzB,SAAS2B,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACjD,OACE,oBACEA,UAAS,sBAAUA,QAAV,IAAUA,IAAa,IAChCF,QAASA,EAFX,SAKGD,GALH,OAGOE,QAHP,IAGOA,IAAW,I,MCCf,SAASE,EAAT,GAA4C,IAA3BC,EAA0B,EAA1BA,QAASvC,EAAiB,EAAjBA,KACzBwC,EAWR,SAAuBD,EAASE,GAC9B,IAAMC,EAAYC,mBAChB,kBACEJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACV,cAACC,EAAD,CACEF,OAAQA,EACRC,MAAOA,EACPL,QAASA,GAHX,sBAIsBK,SAG1B,CAACP,EAASE,IAEZ,OAAO,6BAAKC,IAxBGM,CAAcT,EADmB,EAAXE,SAE/BQ,EA0BR,WAAwD,IAA1BjD,EAAyB,uDAAlB,GAAIuC,EAAc,uDAAJ,GAC3CU,EAAgBN,mBACpB,kBACE3C,EAAK4C,KAAI,SAACM,EAAOJ,GACf,OACE,6BACGP,EAAQK,KAAI,SAACC,GAAY,IAAD,EACjBM,EAAM,UAAGN,EAAOM,cAAV,QAAqB,SAACC,GAAD,OAAWA,GAC5C,OACE,cAAC,EAAD,CAAMhB,QAAO,UAAKc,EAAMG,GAAX,YAAiBR,EAAOS,KAAxB,iBAAqCR,GAAlD,SACGK,EAAOD,EAAML,EAAOS,aAL7B,UAAYJ,EAAMG,GAAlB,cAYN,CAACrD,EAAMuC,IAGT,IAAKgB,QAAQvD,EAAKwD,QAChB,OACE,6BACE,oBAAIC,QAASlB,EAAQiB,OAArB,+CAKN,OAAOP,EAtDeS,CAAqB1D,EAAMuC,GAEjD,OACE,wBAAOF,UAAU,QAAjB,UACE,gCAAQG,IACR,gCAAQS,OAoDd,SAASF,EAAT,GAAiD,IAA3BF,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOL,EAAW,EAAXA,QAAW,EACpBvC,IAAlBI,EADsC,EACtCA,KAAMC,EADgC,EAChCA,QACd,OACE,cAAC,EAAD,CACE8B,UAAU,SACVD,QAAO,UAAKS,EAAOc,MAAZ,mBAA4Bb,GACnCX,QAAS,WACP5B,EAAQ,CACNH,IAAKyC,EAAOS,KACZjD,MAAOC,EAAKF,MAAQyC,EAAOS,MAAQhD,EAAKD,MAAQJ,IAElDwC,KARJ,SAWGI,EAAOc,Q,MCzEP,SAASC,IAAmB,IACzB5C,EAAgBF,IAAhBE,YACFuB,EAcCI,mBACL,iBAAM,CAYD,CACLgB,MAAO,OACPL,KAAM,QAKD,CACLK,MAAO,OACPL,KAAM,QAKD,CACLK,MAAO,QACPL,KAAM,SAxBJO,IAuCG,CACLF,MAAO,SACPL,KAAM,QACNH,OAAQ,SAACW,GACP,OAAOA,EAAOC,MAAM,KAAKzD,OAAO0D,KAAK,WAxCvC,IApBF,OACE,qBAAK3B,UAAU,kBAAf,SACE,cAAC,EAAD,CACEE,QAASA,EACTvC,KAAMgB,EACNyB,QAASf,MAwCjB,SAASmC,IACP,MAAO,CACLF,MAAO,QACPL,KAAM,YACNH,OAAQ,SAACc,GACP,OAAO,mBAAGC,KAAI,cAASC,EAAiBF,IAAjC,SAA6CA,MAe1D,SAASE,EAAiBF,GACxB,OAAOA,EACJG,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbA,QAAQ,IAAK,M,MC3EX,SAASC,IAId,OACE,sBAAKhC,UAAU,YAAf,UACE,uBAAOiC,KAAK,SADd,IACwB,+CCTrB,SAASC,IACd,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,O,MCANmC,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B/F,M","file":"static/js/main.7130f930.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getHeaders } from './constants';\r\n\r\nexport function getRestaurants() {\r\n  const headers = getHeaders();\r\n  //   const endpoint = 'https://code-challenge.spectrumtoolbox.com/api/restaurants';\r\n  const endpoint = 'http://localhost:8080/data';\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: headers,\r\n    redirect: 'follow',\r\n  };\r\n  return fetch(endpoint, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n}\r\n","export function getHeaders() {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('Authorization', 'Api-Key q3MNxtfep8Gt');\r\n  return myHeaders;\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const SORT_ASC = true;\r\n\r\nexport function useSort() {\r\n  const [sort, setSort] = useState({ key: 'name', order: SORT_ASC });\r\n\r\n  return { sort, setSort };\r\n}\r\n\r\nexport function sortByKey(array, sort) {\r\n  return array.sort(function (a, b) {\r\n    const x = a[sort.key];\r\n    const y = b[sort.key];\r\n    if (sort.order === SORT_ASC) {\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    }\r\n    return x > y ? -1 : x < y ? 1 : 0;\r\n  });\r\n}\r\n","import { useState, useEffect, useLayoutEffect } from 'react';\r\n\r\nimport { getRestaurants } from '../api';\r\n\r\nimport { useIsFiltering } from './useFilters';\r\nimport { useSort, sortByKey } from './useSort';\r\nimport { useSearch } from './useSearch';\r\n\r\nexport function useFetchRestaurants() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    async function fetchRestaurants() {\r\n      const results = await getRestaurants();\r\n      setRestaurants(results);\r\n    }\r\n    fetchRestaurants();\r\n  }, []);\r\n\r\n  return restaurants;\r\n}\r\n\r\nexport function useRestaurants() {\r\n  const fetchedRestaurants = useFetchRestaurants();\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const { sort } = useSort();\r\n\r\n  useEffect(() => {\r\n    setRestaurants(deriveRestaurants(fetchedRestaurants, sort));\r\n  }, [fetchedRestaurants, sort]);\r\n\r\n  console.info(restaurants);\r\n  return { restaurants, setRestaurants };\r\n}\r\n\r\nexport function useRefreshRestaurants() {\r\n  const { restaurants, setRestaurants } = useRestaurants();\r\n\r\n  const { sort } = useSort();\r\n  const { isFiltering } = useIsFiltering();\r\n  const { search } = useSearch();\r\n\r\n  useEffect(() => {\r\n    setRestaurants(restaurants, sort);\r\n  });\r\n}\r\n\r\nfunction deriveRestaurants(restaurants = [], sort) {\r\n  return sortByKey(restaurants, sort);\r\n}\r\n// export function useDeriveRestaurants() {\r\n//   const { restaurants, setRestaurants } = useRestaurants();\r\n\r\n//   // search\r\n//   // filter, if filtering\r\n//   // sort\r\n//   useLayoutEffect(() => {\r\n//     setRestaurants(sortByKey(restaurants, sort));\r\n//   }, [restaurants, setRestaurants, sort]);\r\n// }\r\n","import { useState, useMemo } from 'react';\r\nimport { useRestaurants } from './useRestaurants';\r\n\r\nexport function useFilters() {\r\n  const [filters, setFilters] = useState();\r\n}\r\n\r\nexport function useIsFiltering() {\r\n  const [isFiltering, setIsFiltering] = useState();\r\n  return { isFiltering, setIsFiltering };\r\n}\r\n\r\nexport function useGenreFilter() {\r\n  const { restaurants } = useRestaurants();\r\n\r\n  return useMemo(() => transformList(restaurants, 'genre'), [restaurants]);\r\n}\r\nexport function useStateFilter() {\r\n  const { restaurants } = useRestaurants();\r\n\r\n  return useMemo(\r\n    () =>\r\n      transformList(restaurants, 'state').map((element) =>\r\n        element.toUpperCase()\r\n      ),\r\n    [restaurants]\r\n  );\r\n}\r\nexport function useAttireFilter() {\r\n  const { restaurants } = useRestaurants();\r\n\r\n  return useMemo(() => transformList(restaurants, 'attire'), [restaurants]);\r\n}\r\n\r\nfunction transformList(array, key) {\r\n  return array\r\n    .map((element) => element[key].toLowerCase().split(','))\r\n    .flat()\r\n    .filter((value, index, self) => self.indexOf(value) === index)\r\n    .sort();\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport function useSearch() {\r\n  const [search, setSearch] = useState();\r\n  return { search, setSearch };\r\n}\r\n","import './Cell.css';\r\n\r\nexport function Cell({ children, onClick, cellKey, className }) {\r\n  return (\r\n    <td\r\n      className={`Cell ${className ?? ''}`}\r\n      onClick={onClick}\r\n      key={cellKey ?? ''}\r\n    >\r\n      {children}\r\n    </td>\r\n  );\r\n}\r\n","import { useMemo } from 'react';\r\n\r\nimport { Cell } from './Cell';\r\n\r\nimport { useSort, SORT_ASC } from '../../../backend/hooks';\r\n\r\nimport './Table.css';\r\n\r\nexport function Table({ columns, data, refresh }) {\r\n  const header = useMakeHeader(columns, refresh);\r\n  const tableContents = useMakeTableContents(data, columns);\r\n\r\n  return (\r\n    <table className=\"Table\">\r\n      <thead>{header}</thead>\r\n      <tbody>{tableContents}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction useMakeHeader(columns, refresh) {\r\n  const HeaderRow = useMemo(\r\n    () =>\r\n      columns.map((column, index) => (\r\n        <HeaderCell\r\n          column={column}\r\n          index={index}\r\n          refresh={refresh}\r\n          key={`header-cell-${index}`}\r\n        />\r\n      )),\r\n    [columns, refresh]\r\n  );\r\n  return <tr>{HeaderRow}</tr>;\r\n}\r\n\r\nfunction useMakeTableContents(data = [], columns = []) {\r\n  const tableContents = useMemo(\r\n    () =>\r\n      data.map((datum, index) => {\r\n        return (\r\n          <tr key={`${datum.id}-row`}>\r\n            {columns.map((column) => {\r\n              const render = column.render ?? ((value) => value);\r\n              return (\r\n                <Cell cellKey={`${datum.id}-${column.slug}-cell-${index}`}>\r\n                  {render(datum[column.slug])}\r\n                </Cell>\r\n              );\r\n            })}\r\n          </tr>\r\n        );\r\n      }),\r\n    [data, columns]\r\n  );\r\n\r\n  if (!Boolean(data.length)) {\r\n    return (\r\n      <tr>\r\n        <td colSpan={columns.length}>There are currently no results.</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return tableContents;\r\n}\r\n\r\nfunction HeaderCell({ column, index, refresh }) {\r\n  const { sort, setSort } = useSort();\r\n  return (\r\n    <Cell\r\n      className=\"Header\"\r\n      cellKey={`${column.title}-header-${index}`}\r\n      onClick={() => {\r\n        setSort({\r\n          key: column.slug,\r\n          order: sort.key === column.slug ? !sort.order : SORT_ASC,\r\n        });\r\n        refresh();\r\n      }}\r\n    >\r\n      {column.title}\r\n    </Cell>\r\n  );\r\n}\r\n","import { useMemo } from 'react';\r\n\r\nimport { useRefreshRestaurants, useRestaurants } from '../../backend/hooks';\r\n\r\nimport { Table } from '../common/Table';\r\n\r\nimport './RestaurantTable.css';\r\n\r\nexport function RestaurantTable() {\r\n  const { restaurants } = useRestaurants();\r\n  const columns = useMakeColumns(restaurants);\r\n\r\n  return (\r\n    <div className=\"RestaurantTable\">\r\n      <Table\r\n        columns={columns}\r\n        data={restaurants}\r\n        refresh={useRefreshRestaurants}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useMakeColumns() {\r\n  return useMemo(\r\n    () => [\r\n      makeNameColumn(),\r\n      makeCityColumn(),\r\n      makeStateColumn(),\r\n      makePhoneNumberColumn(),\r\n      makeGenresColumn(),\r\n    ],\r\n    []\r\n  );\r\n}\r\n\r\nfunction makeNameColumn() {\r\n  return {\r\n    title: 'Name',\r\n    slug: 'name',\r\n  };\r\n}\r\n\r\nfunction makeCityColumn() {\r\n  return {\r\n    title: 'City',\r\n    slug: 'city',\r\n  };\r\n}\r\n\r\nfunction makeStateColumn() {\r\n  return {\r\n    title: 'State',\r\n    slug: 'state',\r\n  };\r\n}\r\n\r\nfunction makePhoneNumberColumn() {\r\n  return {\r\n    title: 'Phone',\r\n    slug: 'telephone',\r\n    render: (number) => {\r\n      return <a href={`tel:${cleanPhoneNumber(number)}`}>{number}</a>;\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeGenresColumn() {\r\n  return {\r\n    title: 'Genres',\r\n    slug: 'genre',\r\n    render: (genres) => {\r\n      return genres.split(',').sort().join(', ');\r\n    },\r\n  };\r\n}\r\n\r\nfunction cleanPhoneNumber(number) {\r\n  return number\r\n    .replace('(', '')\r\n    .replace(')', '')\r\n    .replace(' ', '')\r\n    .replace('-', '')\r\n    .replace(/^/, '+1');\r\n}\r\n","// import {\r\n//   useGenreFilter,\r\n//   useStateFilter,\r\n//   useAttireFilter,\r\n// } from '../../backend/hooks/useFilters';\r\n\r\nimport './SearchBar.css';\r\n\r\nexport function SearchBar() {\r\n  //   console.info(useGenreFilter());\r\n  //   console.info(useStateFilter());\r\n  //   console.info(useAttireFilter());\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <input type=\"text\" /> <button>Search</button>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\n\nimport { RestaurantTable } from './components/RestaurantTable';\nimport { SearchBar } from './components/SearchBar';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <SearchBar />\n      <RestaurantTable />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}